<!DOCTYPE html>
<html>

<head>
	<meta charset="UTF-8">
	<title>List Manager</title>
	<!-- Bootstrap -->
	<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">
	<style media="screen">

		.glow {
			fill: hsl(204, 70%, 23%);
			-webkit-animation-name: glow-blue;
			-webkit-animation-duration: 1s;
			-webkit-animation-iteration-count: infinite;
			-webkit-animation-timing-function: ease-in-out;
			-webkit-animation-direction: alternate;
			animation-name: glow-blue;
			animation-duration: 1s;
			animation-iteration-count: infinite;
			animation-timing-function: ease-in-out;
			animation-direction: alternate;
		}

		@-webkit-keyframes glow-blue {
			0% {
				fill: hsl(204, 80%, 23%);
			}
			100% {
				fill: hsl(204, 80%, 63%);
			}
		}

		@keyframes glow-blue {
			0% {
				fill: hsl(204, 80%, 23%);
			}
			100% {
				fill: hsl(204, 80%, 63%);
			}
		}

		.glowline {
			stroke: hsl(204, 70%, 23%);
			-webkit-animation-name: glow-blue;
			-webkit-animation-duration: 1s;
			-webkit-animation-iteration-count: infinite;
			-webkit-animation-timing-function: ease-in-out;
			-webkit-animation-direction: alternate;
			animation-name: glow-blue;
			animation-duration: 1s;
			animation-iteration-count: infinite;
			animation-timing-function: ease-in-out;
			animation-direction: alternate;
		}

		@-webkit-keyframes glow-blue {
			0% {
				stroke: hsl(204, 80%, 23%);
			}
			100% {
				stroke: hsl(204, 80%, 63%);
			}
		}

		@keyframes glow-blue {
			0% {
				stroke: hsl(204, 80%, 23%);
			}
			100% {
				stroke: hsl(204, 80%, 63%);
			}
		}
	</style>
	<script src="https://code.jquery.com/jquery-2.2.4.min.js" integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=" crossorigin="anonymous"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.6/angular.min.js"></script>
	<script src="https://code.jquery.com/ui/1.12.0/jquery-ui.min.js" integrity="sha256-eGE6blurk5sHj+rmkfsGYeKyZx3M4bG+ZlFyA7Kns7E=" crossorigin="anonymous"></script>
	<script src="https://cdn.rawgit.com/rezpe/Gateau.js/master/gateau.js"></script>
	<script>
		var LineCtrl = function($scope, $http) {

			//Attributes
			$scope.source = "../data/movement.json"
			$scope.names = [];
			$scope.points = [];
			$scope.time = 0;
			$scope.lines = [];
			$scope.tracksx = [];
			$scope.tracksy = [];
			$scope.offsetX = 200;
			$scope.offsetY = 200;
			$scope.div = 4;
			$scope.reference = "none";

			//Linking the bones
			$scope.selected = 0;

			//Editing Bones
			$scope.selectedbone = 0;

			//Get the points
			$http({
				url: $scope.source,
				method: "GET"
			}).success(function(data, status, headers, config) {

				var items = [];

				//Create a circle for each object
				angular.forEach(data, function(val, key) {

					//Create a div per Point with the name
					$scope.names.push(val.name);

					//Create variable and append to Points
					var temp = {
						name: val.name,
						x: 0,
						y: 0
					};

					$scope.points.push(temp);

					//Create Tracks and append to Tracks
					var trackx = new Track(temp, "x");
					$scope.tracksx.push(trackx);
					var tracky = new Track(temp, "y");
					$scope.tracksy.push(tracky);

					angular.forEach(val.trajectory, function(value, key) {
						trackx.addKeyframe(1000 * value.time, value.x);
						tracky.addKeyframe(1000 * value.time, value.y);
					});

				});

				$scope.time = 2500;

			});

			$scope.$watch('time', function(newValue, oldValue) {
				//Compute Reference
				refx = 0;
				refy = 0;
				if ($scope.reference != "none") {
					indexref = $scope.names.indexOf($scope.reference);
					refx = $scope.tracksx[indexref].evaluateVal(newValue) / $scope.div
					refy = $scope.tracksy[indexref].evaluateVal(newValue) / $scope.div
				}

				angular.forEach($scope.tracksx, function(val, key) {
					$scope.points[key].x = $scope.offsetX + val.evaluateVal(newValue) / $scope.div - refx;
				});

				angular.forEach($scope.tracksy, function(val, key) {
					$scope.points[key].y = $scope.offsetY + val.evaluateVal(newValue) / $scope.div - refy;
				});

			});

			$scope.add = function() {
				$scope.lines.push({});
			};

			$scope.del = function(item) {
				idx = $scope.lines.indexOf(item);
				$scope.lines.splice(idx, 1);
			};

			$scope.getByID = function(array, ID) {
				temp = array.filter(function(element) {
					return element.ID == ID;
				})
				if (temp.length >= 1) {
					return temp[0];
				} else {
					return null;
				}
			}

			$scope.select = function(joint) {
				if ($scope.selected == 0) {
					$scope.selected = joint;
				} else {
					if ($scope.selected == joint) {
						$scope.selected = 0;
					} else {
						$scope.lines.push({
							origin: $scope.selected,
							dest: joint
						});
						$scope.selected = 0;
					}

				}
			}

			$scope.selectbone = function(bone) {
				$scope.selectedbone = bone;
			}

			$scope.delSelectedBone = function() {
				$scope.del($scope.selectedbone)
				$scope.selectedbone = 0;

			}

			//Init
			$scope.init = function() {
				var storage = window['localStorage'];
				if (storage.lines) {
					$scope.lines = JSON.parse(storage.lines);
				}
				if (storage.source) {
					$scope.source = JSON.parse(storage.source);
				}
				if (storage.reference) {
					$scope.reference = JSON.parse(storage.reference);
				}
			};

		}

		var app = angular.module('LineEditor', [])
			.controller("LineCtrl", LineCtrl);


		app.filter('disnum', function() {
			return function(item, names) {
				return item.map(function(value) {
					return {
						origin: names.indexOf(value.origin),
						dest: names.indexOf(value.dest)
					};
				});
			};
		});
	</script>
</head>

<body ng-app="LineEditor" ng-controller="LineCtrl">

	<!-- Fixed navbar -->
	<div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
		<div class="container">
			<div class="navbar-header">
				<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
					<span class="sr-only">Toggle navigation</span>
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
				</button>
				<a class="navbar-brand" href="#">MoCap Visualizer</a>
			</div>
			<div class="navbar-collapse collapse">
				<ul class="nav navbar-nav pull-right">

				</ul>
			</div>
			<!--/.nav-collapse -->
		</div>
	</div>

	<div class="container" id="LIST" style="padding:60px">

		<label>Offset X</label>
		<input type="number" ng-model="offsetX">
		</input>

		<label>Offset Y</label>
		<input type="number" ng-model="offsetY">
		</input>

		<label>Divider</label>
		<input type="number" ng-model="div">
		</input>

		<label>Reference: {{reference}}</label>
		<select ng-model="reference">
			<option value="none">none</option>
			<option ng-repeat="option in names" value="{{option}}">{{option}}</option>
		</select>

		</br>

		<svg xmlns="http://www.w3.org/2000/svg" version="1.1" class="col-md-12" height="500px">
			<g ng-repeat="line in lines">
				<line ng-class="line==selectedbone?'glowline':'none'" ng-click="selectbone(line)" ng-attr-x1="{{points[names.indexOf(line.origin)].x}}" ng-attr-y1="{{points[names.indexOf(line.origin)].y}}" ng-attr-x2="{{points[names.indexOf(line.dest)].x}}" ng-attr-y2="{{points[names.indexOf(line.dest)].y}}"
						stroke-width="5" stroke="grey" />
			</g>

			<g ng-repeat="point in points">
				<text ng-attr-x="{{point.x}}" ng-attr-y="{{point.y-10}}" style="font-family:Times,serif;font-size:10px;stroke: black;">
					{{point.name}}
				</text>
				<circle ng-class="point.name==selected?'glow':'none'" ng-click="select(point.name)" ng-attr-cx="{{point.x}}" ng-attr-cy="{{point.y}}" r="10" stroke="lightblue" fill="black" stroke-width="2" />
			</g>

			<text ng-attr-x="{{(points[names.indexOf(selectedbone.origin)].x+points[names.indexOf(selectedbone.dest)].x)/2}}" ng-attr-y="{{(points[names.indexOf(selectedbone.origin)].y+points[names.indexOf(selectedbone.dest)].y)/2}}" style="font-family:Times,serif;font-size:16px;fill:red"
					ng-click="delSelectedBone()">
				Remove
			</text>

		</svg>

		<input type="range" class="form-control input-lg" ng-model="time" name="points" min="1" max="5000" style="width:100%">
		<pre>Current time is: {{time/1000}} sec</pre>

		<pre>{{lines}}</pre>

	</div>

</body>

</html>
